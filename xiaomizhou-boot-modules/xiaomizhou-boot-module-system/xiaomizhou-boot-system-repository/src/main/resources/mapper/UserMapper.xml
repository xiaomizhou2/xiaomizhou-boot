<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.xiaomizhou.system.repository.UserRepository">
    <resultMap id="baseResultMap" type="com.xiaomizhou.system.entity.UserEntity">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="password_expire_time" jdbcType="TIMESTAMP" property="passwordExpireTime"/>
        <result column="organization_id" jdbcType="VARCHAR" property="organization.id"/>
        <result column="organization.code" jdbcType="VARCHAR" property="organization.code"/>
        <result column="organization.name" jdbcType="VARCHAR" property="organization.name"/>
        <result column="department_id" jdbcType="VARCHAR" property="department.id"/>
        <result column="department.code" jdbcType="VARCHAR" property="department.code"/>
        <result column="department.name" jdbcType="VARCHAR" property="department.name"/>
        <result column="nick_name" jdbcType="VARCHAR" property="nickName"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="mobile" jdbcType="CHAR" property="mobile"/>
        <result column="avatar" jdbcType="VARCHAR" property="avatar"/>
        <result column="sex" jdbcType="TINYINT" property="sex"/>
        <result column="id_card_no" jdbcType="VARCHAR" property="idCardNo"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="created_user_id" jdbcType="VARCHAR" property="createdUser.id"/>
        <result column="createdUser.name" jdbcType="VARCHAR" property="createdUser.name"/>
        <result column="created_time" jdbcType="TIMESTAMP" property="createdTime"/>
        <result column="last_modified_user_id" jdbcType="VARCHAR" property="lastModifiedUser.id"/>
        <result column="lastModifiedUser.name" jdbcType="VARCHAR" property="lastModifiedUser.name"/>
        <result column="last_modified_time" jdbcType="TIMESTAMP" property="lastModifiedTime"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="deleted" jdbcType="BIT" property="deleted"/>
    </resultMap>

    <resultMap id="detailResultMap" type="com.xiaomizhou.system.entity.UserEntity" extends="baseResultMap">
        <collection property="roles" ofType="com.xiaomizhou.system.entity.RoleEntity" javaType="java.util.List"
                    select="com.xiaomizhou.system.repository.RoleRepository.listByUserId"
                    column="id"/>

        <collection property="positions" ofType="com.xiaomizhou.system.entity.PositionEntity" javaType="java.util.List"
                    select="com.xiaomizhou.system.repository.PositionRepository.listByUserId"
                    column="id"/>
    </resultMap>

    <resultMap id="statisticsResultMap" type="com.hectdi.system.entity.UserChartEntity">
        <result column="count" jdbcType="TINYINT" property="count"/>
        <result column="countTime" jdbcType="TIMESTAMP" property="countTime"/>
    </resultMap>

    <sql id="selectBase">
        SELECT t.id,
        t.username,
        t.`password`,
        t.password_expire_time,
        t.organization_id,
        organization.code AS "organization.code",
        organization.name AS "organization.name",
        t.department_id,
        department.code AS "department.code",
        department.name AS "department.name",
        t.nick_name,
        t.email,
        t.mobile,
        t.avatar,
        t.sex,
        t.id_card_no,
        t.`status`,
        t.created_user_id,
        createdUser.name AS "createdUser.name",
        t.created_time,
        t.last_modified_user_id,
        lastModifiedUser.name AS "lastModifiedUser.name",
        t.last_modified_time,
        t.description,
        t.deleted
        FROM t_user t
        LEFT JOIN t_user createdUser ON t.created_user_id = createdUser.id
        LEFT JOIN t_user lastModifiedUser ON t.last_modified_user_id = lastModifiedUser.id
        LEFT JOIN t_organization organization ON t.organization_id = organization.id
        LEFT JOIN t_department department ON t.department_id = department.id
    </sql>


    <sql id="orderBySql">
        <choose>
            <when test='pageable != null and pageable.sort != null'>
                <foreach collection="pageable.sort.toList()" item="order"
                         index="index" open=" order by " close="" separator=",">
                    <include refid="orderByField"/>
                </foreach>
            </when>
            <otherwise>
                order by t.created_time DESC
            </otherwise>
        </choose>
    </sql>

    <sql id="orderByField">
        <choose>
            <when test="order.property == 'id'">
                t.id
                <include refid="com.xiaomizhou.mybatis.repository.BaseSearchRepository.sortSql"/>
            </when>
            <when test="order.property == 'createdTime'">
                t.created_time
                <include refid="com.xiaomizhou.mybatis.repository.BaseSearchRepository.sortSql"/>
            </when>
            <otherwise>
                t.created_time desc
            </otherwise>
        </choose>
    </sql>

    <select id="findById" resultMap="detailResultMap">
        <include refid="selectBase"/>
        WHERE t.deleted = 0 AND t.id = #{id,jdbcType=VARCHAR}
    </select>

    <select id="find" resultMap="baseResultMap">
        <include refid="selectBase"/>
        LEFT JOIN t_user_role user_role ON t.id = user_role.user_id
        <where>
            t.deleted = 0
            <if test="parameters.username != null and parameters.username != ''">
                AND t.username LIKE CONCAT('%', #{parameters.username}, '%')
            </if>
            <if test="parameters.organizationId != null and parameters.organizationId != ''">
                AND t.organization_id = #{parameters.organizationId}
            </if>
            <if test="parameters.organizationCode != null and parameters.organizationCode != ''">
                AND organization.code = #{parameters.organizationCode}
            </if>
            <if test="parameters.organizationName != null and parameters.organizationName != ''">
                AND organization.name LIKE CONCAT('%', #{parameters.organizationName}, '%')
            </if>
            <if test="parameters.departmentId != null and parameters.departmentId != ''">
                AND t.department_id = #{parameters.departmentId}
            </if>
            <if test="parameters.departmentCode != null and parameters.departmentCode != ''">
                AND department.code = #{parameters.departmentCode}
            </if>
            <if test="parameters.departmentName != null and parameters.departmentName != ''">
                AND department.name LIKE CONCAT('%', #{parameters.departmentName}, '%')
            </if>
            <if test="parameters.name != null and parameters.name != ''">
                AND t.name LIKE CONCAT('%', #{parameters.name}, '%')
            </if>
            <if test="parameters.email != null and parameters.email != ''">
                AND t.email = #{parameters.email}
            </if>
            <if test="parameters.mobile != null and parameters.mobile != ''">
                AND t.mobile = #{parameters.mobile}
            </if>
            <if test="parameters.status != null and parameters.status != ''">
                AND t.status = #{parameters.status}
            </if>
            <if test="parameters.type != null and parameters.type != ''">
                AND t.type = #{parameters.type}
            </if>
            <if test="parameters.sex != null and parameters.sex != ''">
                AND t.sex = #{parameters.sex}
            </if>
            <if test="parameters.idCardNo != null and parameters.idCardNo != ''">
                AND t.id_card_no = #{parameters.idCardNo}
            </if>
            <if test="parameters.ids != null and parameters.ids.size() != 0">
                AND t.id IN
                <foreach collection="parameters.ids" item="id" open="(" separator="," close=")">
                    #{id, jdbcType=VARCHAR}
                </foreach>
            </if>
            <if test="parameters.roleId != null and parameters.roleId != ''">
                AND user_role.role_id = #{parameters.roleId, jdbcType=VARCHAR}
            </if>
            <include
                refid="com.hectdi.mybatis.repository.ExtendablePropertiesRepository.extendablePropertiesSelectConditions"/>
        </where>
        <include refid="orderBySql"/>
    </select>

    <select id="listByGroupId" resultMap="baseResultMap">
        <include refid="selectBase"/>
        LEFT JOIN t_user_group userGroup ON t.id = userGroup.user_id
        WHERE t.deleted = 0 AND userGroup.gruop_id = #{groupId,jdbcType=VARCHAR}
        ORDER BY t.created_time DESC
    </select>

    <insert id="insert" parameterType="com.hectdi.system.entities.UserEntity">
        insert into t_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                `password`,
            </if>
            <if test="passwordExpireTime != null">
                password_expire_time,
            </if>
            <if test="organization.id != null">
                organization_id,
            </if>
            <if test="department.id != null">
                department_id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="mobile != null">
                mobile,
            </if>
            <if test="avatar != null">
                avatar,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="idCardNo != null">
                id_card_no,
            </if>
            <if test="type != null">
                `type`,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="ifSuperAdmin != null">
                if_super_admin,
            </if>
            <if test="ifTenantAdmin != null">
                if_tenant_admin,
            </if>
            <if test="ifOrganizationAdmin != null">
                if_organization_admin,
            </if>
            <if test="lastLoginIp != null">
                last_login_ip,
            </if>
            <if test="lastLoginTime != null">
                last_login_time,
            </if>
            <if test="createdUser != null">
                created_user_id,
            </if>
            <if test="createdTime != null">
                created_time,
            </if>
            <if test="lastModifiedUser != null">
                last_modified_user_id,
            </if>
            <if test="lastModifiedTime != null">
                last_modified_time,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="deleted != null">
                deleted,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="passwordExpireTime != null">
                #{passwordExpireTime,jdbcType=TIMESTAMP},
            </if>
            <if test="organization.id != null">
                #{organization.id,jdbcType=VARCHAR},
            </if>
            <if test="department.id != null">
                #{department.id,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                #{mobile,jdbcType=CHAR},
            </if>
            <if test="avatar != null">
                #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=BOOLEAN},
            </if>
            <if test="idCardNo != null">
                #{idCardNo,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=BOOLEAN},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="ifSuperAdmin != null">
                #{ifSuperAdmin,jdbcType=BIT},
            </if>
            <if test="ifTenantAdmin != null">
                #{ifTenantAdmin,jdbcType=BIT},
            </if>
            <if test="ifOrganizationAdmin != null">
                #{ifOrganizationAdmin,jdbcType=BIT},
            </if>
            <if test="lastLoginIp != null">
                #{lastLoginIp,jdbcType=VARCHAR},
            </if>
            <if test="lastLoginTime != null">
                #{lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createdUser != null">
                #{createdUser.id,jdbcType=VARCHAR},
            </if>
            <if test="createdTime != null">
                #{createdTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastModifiedUser != null">
                #{lastModifiedUser.id,jdbcType=VARCHAR},
            </if>
            <if test="lastModifiedTime != null">
                #{lastModifiedTime,jdbcType=TIMESTAMP},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="deleted != null">
                #{deleted,jdbcType=BIT},
            </if>
        </trim>
        ;
        <if test="roles != null and roles.size() != 0">
            <foreach collection="roles" item="item" index="index" open="" separator="" close="">
                INSERT INTO t_user_role(user_id, role_id) VALUES (#{id}, #{item.id});
            </foreach>
        </if>
        <if test="positions != null and positions.size() != 0">
            <foreach collection="positions" item="item" index="index" open="" separator="" close="">
                INSERT INTO t_user_position(user_id, position_id) VALUES (#{id}, #{item.id});
            </foreach>
        </if>
        <if test="extraOrganizations != null and extraOrganizations.size() != 0">
            <foreach collection="extraOrganizations" item="item" index="index" open="" separator="" close="">
                INSERT INTO t_user_organization_extra(user_id, organization_id) VALUES (#{id}, #{item.id});
            </foreach>
        </if>
        <if test="extraDepartments != null and extraDepartments.size() != 0">
            <foreach collection="extraDepartments" item="item" index="index" open="" separator="" close="">
                INSERT INTO t_user_department_extra(user_id, department_id) VALUES (#{id}, #{item.id});
            </foreach>
        </if>
        <if test="groups != null and groups.size() != 0">
            <foreach collection="groups" item="item" index="index" open="" separator="" close="">
                INSERT INTO t_user_group(user_id, gruop_id) VALUES (#{id}, #{item.id});
            </foreach>
        </if>
        <if test="extendableProperties != null">
            <include refid="com.hectdi.mybatis.repository.ExtendablePropertiesRepository.insertExtendableProperties"></include>
        </if>
        <if test="extendableValues != null">
            <include refid="com.hectdi.mybatis.repository.ExtendableRepository.insertExtendableValues"></include>
        </if>
    </insert>

    <update id="update" parameterType="com.hectdi.system.entities.UserEntity">
        update t_user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                `password` = #{password,jdbcType=VARCHAR},
            </if>
            <if test="passwordExpireTime != null">
                password_expire_time = #{passwordExpireTime,jdbcType=TIMESTAMP},
            </if>
            <if test="organization.id != null">
                organization_id = #{organization.id,jdbcType=VARCHAR},
            </if>
            <if test="department.id != null">
                department_id = #{department.id,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                mobile = #{mobile,jdbcType=CHAR},
            </if>
            <if test="avatar != null">
                avatar = #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=TINYINT},
            </if>
            <if test="idCardNo != null">
                id_card_no = #{idCardNo,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                `type` = #{type,jdbcType=TINYINT},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=TINYINT},
            </if>
            <if test="ifSuperAdmin != null">
                if_super_admin = #{ifSuperAdmin,jdbcType=BIT},
            </if>
            <if test="ifTenantAdmin != null">
                if_tenant_admin = #{ifTenantAdmin,jdbcType=BIT},
            </if>
            <if test="ifOrganizationAdmin != null">
                if_organization_admin = #{ifOrganizationAdmin,jdbcType=BIT},
            </if>
            <if test="lastLoginIp != null">
                last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
            </if>
            <if test="lastLoginTime != null">
                last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createdUser != null">
                created_user_id = #{createdUser.id,jdbcType=VARCHAR},
            </if>
            <if test="createdTime != null">
                created_time = #{createdTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastModifiedUser != null">
                last_modified_user_id = #{lastModifiedUser.id,jdbcType=VARCHAR},
            </if>
            <if test="lastModifiedTime != null">
                last_modified_time = #{lastModifiedTime,jdbcType=TIMESTAMP},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="deleted != null">
                deleted = #{deleted,jdbcType=BIT},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR};
        <if test="roles != null">
            DELETE FROM t_user_role WHERE user_id = #{id};
            <if test="roles.size() != 0">
                <foreach collection="roles" item="item" index="index" open="" separator="" close="">
                    INSERT INTO t_user_role(user_id, role_id) VALUES (#{id}, #{item.id});
                </foreach>
            </if>
        </if>
        <if test="positions != null">
            DELETE FROM t_user_position WHERE user_id = #{id};
            <if test="positions.size() != 0">
                <foreach collection="positions" item="item" index="index" open="" separator="" close="">
                    INSERT INTO t_user_position(user_id, position_id) VALUES (#{id}, #{item.id});
                </foreach>
            </if>
        </if>
        <if test="extraOrganizations != null">
            DELETE FROM t_user_organization_extra WHERE user_id = #{id};
            <if test="extraOrganizations.size() != 0">
                <foreach collection="extraOrganizations" item="item" index="index" open="" separator="" close="">
                    INSERT INTO t_user_organization_extra(user_id, organization_id) VALUES (#{id}, #{item.id});
                </foreach>
            </if>
        </if>
        <if test="extraDepartments != null">
            DELETE FROM t_user_department_extra WHERE user_id = #{id};
            <if test="extraDepartments.size() != 0">
                <foreach collection="extraDepartments" item="item" index="index" open="" separator="" close="">
                    INSERT INTO t_user_department_extra(user_id, department_id) VALUES (#{id}, #{item.id});
                </foreach>
            </if>
        </if>
        <if test="groups != null">
            DELETE FROM t_user_group WHERE user_id = #{id};
            <if test="groups.size() != 0">
                <foreach collection="groups" item="item" index="index" open="" separator="" close="">
                    INSERT INTO t_user_group(user_id, gruop_id) VALUES (#{id}, #{item.id});
                </foreach>
            </if>
        </if>
        <if test="extendableProperties != null">
            <include refid="com.hectdi.mybatis.repository.ExtendablePropertiesRepository.updateExtendableProperties"></include>
        </if>
        <if test="extendableValues != null">
            <bind name="_OBJECT_TYPE" value="_parameter.getClass().getName()"/>
            delete from t_extendable_values  where object_id=#{id} and  object_type= #{_OBJECT_TYPE};
            <include refid="com.hectdi.mybatis.repository.ExtendableRepository.insertExtendableValues"></include>
        </if>
    </update>

    <delete id="deleteById" parameterType="java.lang.String">
        UPDATE t_user
        SET deleted = 1
        WHERE id = #{id}
    </delete>

    <delete id="batchDelete" parameterType="java.util.List">
        UPDATE t_user SET deleted = 1 WHERE id IN (
        <foreach collection="list" item="item" index="index" open="" separator="," close="">
            #{item,jdbcType=VARCHAR}
        </foreach>
        )
    </delete>

    <delete id="delete" parameterType="com.hectdi.system.entities.UserEntity">
        UPDATE t_user SET deleted = 1
        WHERE 1=1
        <if test="username != null">
            AND username = #{username,jdbcType=VARCHAR}
        </if>
        <if test="organization.id != null">
            AND organization_id = #{organization.id,jdbcType=VARCHAR}
        </if>
        <if test="department.id != null">
            AND department_id = #{department.id,jdbcType=VARCHAR}
        </if>
        <if test="name != null">
            AND nick_name = #{name,jdbcType=VARCHAR}
        </if>
        <if test="email != null">
            AND email = #{email,jdbcType=VARCHAR}
        </if>
        <if test="mobile != null">
            AND mobile = #{mobile,jdbcType=CHAR}
        </if>
        <if test="avatar != null">
            AND avatar = #{avatar,jdbcType=VARCHAR}
        </if>
        <if test="sex != null">
            AND sex = #{sex,jdbcType=TINYINT}
        </if>
        <if test="idCardNo != null">
            AND id_card_no = #{idCardNo,jdbcType=VARCHAR}
        </if>
        <if test="type != null">
            AND `type` = #{type,jdbcType=TINYINT}
        </if>
        <if test="status != null">
            AND `status` = #{status,jdbcType=TINYINT}
        </if>
        <if test="lastLoginIp != null">
            AND last_login_ip = #{lastLoginIp,jdbcType=VARCHAR}
        </if>
        <if test="lastLoginTime != null">
            AND last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP}
        </if>
        <if test="createdUser != null">
            AND created_user_id = #{createdUser.id,jdbcType=VARCHAR}
        </if>
        <if test="createdTime != null">
            AND created_time = #{createdTime,jdbcType=TIMESTAMP}
        </if>
        <if test="lastModifiedUser != null">
            AND last_modified_user_id = #{lastModifiedUser.id,jdbcType=VARCHAR}
        </if>
        <if test="lastModifiedTime != null">
            AND last_modified_time = #{lastModifiedTime,jdbcType=TIMESTAMP}
        </if>
        <if test="description != null">
            AND `description` = #{description,jdbcType=VARCHAR}
        </if>
        <if test="deleted != null">
            AND deleted = #{deleted,jdbcType=BIT}
        </if>
    </delete>

    <select id="listByUsernameOrEmailOrMobile" resultMap="baseResultMap">
        <include refid="selectBase"/>
        <where>
            t.deleted = 0
            AND ( t.username = #{username,jdbcType=VARCHAR}
            <if test="email != null and email != ''">
                OR t.email = #{email,jdbcType=VARCHAR}
            </if>
            <if test="mobile != null and mobile != ''">
                OR t.mobile = #{mobile,jdbcType=VARCHAR}
            </if>
            )
        </where>
    </select>

    <select id="listByDepartmentId" resultMap="baseResultMap">
        <include refid="selectBase"/>
        <where>
            t.deleted = 0 AND t.department_id = #{departmentId,jdbcType=VARCHAR}
        </where>
    </select>

    <insert id="insertByTenantId" parameterType="com.hectdi.system.entities.UserEntity">
        insert into t_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                `password`,
            </if>
            <if test="passwordExpireTime != null">
                password_expire_time,
            </if>
            <if test="organization.id != null">
                organization_id,
            </if>
            <if test="department.id != null">
                department_id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="mobile != null">
                mobile,
            </if>
            <if test="avatar != null">
                avatar,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="idCardNo != null">
                id_card_no,
            </if>
            <if test="type != null">
                `type`,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="ifSuperAdmin != null">
                if_super_admin,
            </if>
            <if test="ifTenantAdmin != null">
                if_tenant_admin,
            </if>
            <if test="ifOrganizationAdmin != null">
                if_organization_admin,
            </if>
            <if test="lastLoginIp != null">
                last_login_ip,
            </if>
            <if test="lastLoginTime != null">
                last_login_time,
            </if>
            <if test="createdUser != null">
                created_user_id,
            </if>
            <if test="createdTime != null">
                created_time,
            </if>
            <if test="lastModifiedUser != null">
                last_modified_user_id,
            </if>
            <if test="lastModifiedTime != null">
                last_modified_time,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="deleted != null">
                deleted,
            </if>
            <if test="tenant.id != null">
                tenant_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="passwordExpireTime != null">
                #{passwordExpireTime,jdbcType=TIMESTAMP},
            </if>
            <if test="organization.id != null">
                #{organization.id,jdbcType=VARCHAR},
            </if>
            <if test="department.id != null">
                #{department.id,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                #{mobile,jdbcType=CHAR},
            </if>
            <if test="avatar != null">
                #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=BOOLEAN},
            </if>
            <if test="idCardNo != null">
                #{idCardNo,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=BOOLEAN},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="ifSuperAdmin != null">
                #{ifSuperAdmin,jdbcType=BIT},
            </if>
            <if test="ifTenantAdmin != null">
                #{ifTenantAdmin,jdbcType=BIT},
            </if>
            <if test="ifOrganizationAdmin != null">
                #{ifOrganizationAdmin,jdbcType=BIT},
            </if>
            <if test="lastLoginIp != null">
                #{lastLoginIp,jdbcType=VARCHAR},
            </if>
            <if test="lastLoginTime != null">
                #{lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createdUser != null">
                #{createdUser.id,jdbcType=VARCHAR},
            </if>
            <if test="createdTime != null">
                #{createdTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastModifiedUser != null">
                #{lastModifiedUser.id,jdbcType=VARCHAR},
            </if>
            <if test="lastModifiedTime != null">
                #{lastModifiedTime,jdbcType=TIMESTAMP},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="deleted != null">
                #{deleted,jdbcType=BIT},
            </if>
            <if test="tenant.id != null">
                #{tenant.id,jdbcType=VARCHAR},
            </if>
        </trim>
        ;
        <if test="roles != null and roles.size() != 0">
            <foreach collection="roles" item="item" index="index" open="" separator="" close="">
                INSERT INTO t_user_role(user_id, role_id) VALUES (#{id}, #{item.id});
            </foreach>
        </if>
        <if test="positions != null and positions.size() != 0">
            <foreach collection="positions" item="item" index="index" open="" separator="" close="">
                INSERT INTO t_user_position(user_id, position_id) VALUES (#{id}, #{item.id});
            </foreach>
        </if>
        <if test="extraOrganizations != null and extraOrganizations.size() != 0">
            <foreach collection="extraOrganizations" item="item" index="index" open="" separator="" close="">
                INSERT INTO t_user_organization_extra(user_id, organization_id) VALUES (#{id}, #{item.id});
            </foreach>
        </if>
        <if test="extraDepartments != null and extraDepartments.size() != 0">
            <foreach collection="extraDepartments" item="item" index="index" open="" separator="" close="">
                INSERT INTO t_user_department_extra(user_id, department_id) VALUES (#{id}, #{item.id});
            </foreach>
        </if>
        <if test="groups != null and groups.size() != 0">
            <foreach collection="groups" item="item" index="index" open="" separator="" close="">
                INSERT INTO t_user_group(user_id, gruop_id) VALUES (#{id}, #{item.id});
            </foreach>
        </if>
    </insert>

    <select id="findTenantAdmin" resultMap="baseResultMap">
        <include refid="selectBase"/>
        WHERE t.tenant_id = #{tenantId,jdbcType=VARCHAR} AND t.if_tenant_admin = true
    </select>

    <update id="updateByIds">
        UPDATE t_user
        <set>
            <if test="entity.password != null and entity.password != ''">
                `password` = #{entity.password,jdbcType=VARCHAR},
            </if>
            <if test="entity.status != null">
                `status` = #{entity.status,jdbcType=TINYINT}
            </if>
        </set>
        <where>
            id IN
            <foreach collection="ids" item="item" index="index" open="(" separator="," close=")">
                #{item, jdbcType=VARCHAR}
            </foreach>
        </where>
    </update>

    <select id="selectCount" resultType="java.lang.Integer">
        SELECT
            COUNT(id)
        FROM t_user WHERE deleted = 0
    </select>

    <select id="selectUserCount1" resultMap="statisticsResultMap">
        SELECT t1.date as countTime,IFNULL(t2.num , 0) as `count`
        FROM
        (SELECT
        @s :=@s + 1 as `index`,
        DATE(DATE_SUB(CURRENT_DATE, INTERVAL @s DAY)) AS `date`
        FROM
        mysql.help_topic,
        (SELECT @s := -1) temp
           WHERE
        @s &lt; 11
        ) AS `t1`
        LEFT JOIN
        (SELECT
        DATE_FORMAT(created_time,'%Y-%m-%d') ct,
        COUNT(id) num
        FROM t_user
            WHERE
        deleted = 0 AND DATE_SUB(CURDATE(), INTERVAL 12 DAY) &lt;= DATE(created_time)
        GROUP BY ct ) AS `t2`
        ON t1.date = t2.ct ORDER BY countTime ASC
    </select>

    <select id="selectUserCount" resultMap="statisticsResultMap">
        SELECT date AS countTime, IFNULL(COUNT(DISTINCT(t.username)), 0) AS `count`
        FROM (
        <include refid="daySql"/>
        ) dateTotal
        LEFT JOIN t_user t ON DATE_FORMAT(t.created_time, '%Y-%m-%d') &lt;= dateTotal.`date`
        WHERE t.deleted = 0
        GROUP BY `date`
    </select>

    <select id="listByTenantId" resultMap="baseResultMap">
        <include refid="selectBase"/>
        WHERE t.deleted = 0 AND t.tenant_id = #{tenantId,jdbcType=VARCHAR}
    </select>

    <!--近12天-->
    <sql id="daySql">
        SELECT DATE_FORMAT((CURDATE() - INTERVAL 1 DAY), '%Y-%m-%d') AS `date`
        UNION
        SELECT DATE_FORMAT((CURDATE() - INTERVAL 2 DAY), '%Y-%m-%d') AS `date`
        UNION
        SELECT DATE_FORMAT((CURDATE() - INTERVAL 3 DAY), '%Y-%m-%d') AS `date`
        UNION
        SELECT DATE_FORMAT((CURDATE() - INTERVAL 4 DAY), '%Y-%m-%d') AS `date`
        UNION
        SELECT DATE_FORMAT((CURDATE() - INTERVAL 5 DAY), '%Y-%m-%d') AS `date`
        UNION
        SELECT DATE_FORMAT((CURDATE() - INTERVAL 6 DAY), '%Y-%m-%d') AS `date`
        UNION
        SELECT DATE_FORMAT((CURDATE() - INTERVAL 7 DAY), '%Y-%m-%d') AS `date`
        UNION
        SELECT DATE_FORMAT((CURDATE() - INTERVAL 8 DAY), '%Y-%m-%d') AS `date`
        UNION
        SELECT DATE_FORMAT((CURDATE() - INTERVAL 9 DAY), '%Y-%m-%d') AS `date`
        UNION
        SELECT DATE_FORMAT((CURDATE() - INTERVAL 10 DAY), '%Y-%m-%d') AS `date`
        UNION
        SELECT DATE_FORMAT((CURDATE() - INTERVAL 11 DAY), '%Y-%m-%d') AS `date`
        UNION
        SELECT DATE_FORMAT((CURDATE() - INTERVAL 12 DAY), '%Y-%m-%d') AS `date`
    </sql>
</mapper>
